// #############################################
// ||                                         ||
// ||Fonctionnalité en cours de développement ||
// ||Sera disponible dans la prochaine version||
// ||                                         ||
// ||                                         ||
// #############################################


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
}

model Project {
  id            String   @id @default(cuid())
  title         String
  slug          String   @unique
  description   String
  content       String
  image         String?
  technologies  String[]
  githubUrl     String?
  demoUrl       String?
  featured      Boolean  @default(false)
  published     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  authorId      String
  author        User     @relation(fields: [authorId], references: [id])
}

model Settings {
  id            String   @id @default(cuid())
  key           String   @unique
  value         String
  updatedAt     DateTime @updatedAt
}

model Analytics {
  id            String   @id @default(cuid())
  page          String
  visits        Int      @default(0)
  date          DateTime @default(now())
}